@page "/"

@using VolumeWeb.Models
@using VolumeWeb.Services
@using Type = VolumeWeb.Models.Type

@inject IVolumeService VolumeService;

<h1>Calculate the volume</h1>

<EditForm Model="_volumeResult" OnValidSubmit="HandleValidSubmit">
    
    <div class="row" style="margin-left: 0px;">
        <p style="margin-right: 24px;">Select figure:</p>
        <div class="row">
            <div style="margin-right: 16px;">
                <label>
                    <input type="radio" id="cylinder" name="figure-type" checked value="cylinder" @onchange="@(ChangeFigureType)">
                    <span>Cylinder</span>
                </label>
            </div>
            <div>
                <label>
                    <input type="radio" id="cone" name="figure-type" value="cone" @onchange="@(ChangeFigureType)">
                    <span>Cone</span>
                </label>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-3 mb-3">
            <label for="height" class="mb-2">Height</label>
            <InputNumber class="form-control" id="height" placeholder="2" @bind-Value="@_volumeResult.Height"/>
        </div>
        <div class="form-check col-md-3 mb-3">
            <label class="form-check-label mb-2" for="radius">Radius</label>
            <InputNumber class="form-control" id="radius" placeholder="5" @bind-Value="@_volumeResult.Radius"/>
        </div>
    </div>
    <div class="mb-2">
        <div class="custom-control custom-switch" style="cursor: pointer">
            <input type="checkbox" class="custom-control-input" id="customSwitch1" checked @onchange="SaveResultsCheckboxToggle">
            <label class="custom-control-label" for="customSwitch1">Save results</label>
        </div>
    </div>
    <button type="submit" class="btn btn-primary submit-employee">Get result</button>
    <hr>
</EditForm>

@if (_volumeResultResponse != null)
{
    <p>Volume is: @_volumeResultResponse.Volume</p>
}

@code {
    private VolumeResult _volumeResult = new VolumeResult();
    private VolumeResult _volumeResultResponse = null;
    private bool _isSavingResults = true;
    private bool _isCylinderSelected = true;

    private async Task HandleValidSubmit()
    {
        if (_isSavingResults)
            _volumeResultResponse = await VolumeService.SaveAndGetVolumeResult(_volumeResult.Height, _volumeResult.Radius, _isCylinderSelected ? Type.Cylinder : Type.Cone);
        else
            _volumeResultResponse = await VolumeService.GetVolumeResult(_volumeResult.Height, _volumeResult.Radius, _isCylinderSelected ? Type.Cylinder : Type.Cone);
        
        StateHasChanged();
    }

    private void ChangeFigureType(ChangeEventArgs e)
    {
        _isCylinderSelected = (string) e.Value == "cylinder";
    }

    private void SaveResultsCheckboxToggle()
    {
        _isSavingResults = !_isSavingResults;
    }
}